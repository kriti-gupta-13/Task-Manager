<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body style="background-color: rgb(255, 255, 247);">
    <div class="container">
        <button class="btn btn-danger mt-3 float-end" id="logout--button">Logout</button>
        <h1 class="d-flex flex-row justify-content-around my-5">Welcome {{name}}</h1>
        <div class="d-flex flex-row justify-content-around row">
            <div class="col-5 border border-dark rounded px-4 py-3">
                <h2 class="d-flex justify-content-around">Create Tasks</h2>
                <form id="taskform">
                    <div class="mb-3">
                        <label for="description" class="form-label">Description:</label>
                        <input type="text" class="form-control" id="description" name="description" required>
                    </div>
                    <div class="mb-3">
                        <label for="dueDate" class="form-label">Due Date and Time:</label>
                        <input type="datetime-local" class="form-control" id="dueDate" name="dueDate" required>
                    </div>
                    <div class="mb-3 float float-end mt-3">
                        <button class="btn btn-primary" type="submit" id="submit">Submit</button>
                    </div>
                </form>
            </div>
            <div class="col-2"></div>
            <div class="col-5 border border-dark rounded px-4 py-3 overflow-auto" style="height : 55vh;">
                <h2 class="d-flex flex-row justify-content-around">Todo list</h2>
                <div class="mt-3">
                    {{#each tasks}}
                        <div class="border border-secondary bg-light rounded mb-3 px-2 py-1 mx-3">
                            <div class="row">
                                <div class="col-1 mt-4">
                                    <span data-id="{{_id}}" style="cursor: pointer;" class="done--button">✅</span>
                                </div>
                                <div class="col-10">
                                    <p class="m-0">{{description}}</p>
                                    <p class="m-0">{{dueDate}}</p>
                                </div>
                                <div class="col-1 mt-1">
                                    <span data-id="{{_id}}" style="cursor: pointer;" class="delete--button">❌</span>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('submit').addEventListener('click', function (event) {
            event.preventDefault();
            var description = document.getElementById('description').value;
            var dueDate = document.getElementById('dueDate').value;
            var data = {
                description,
                dueDate
            };
            //console.log(data);
            fetch('http://localhost:3000/tasks', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(res => {
                //console.log(res);
                if (res.task._id) {
                    // reload page
                    window.location.href = 'http://localhost:3000/';
                }
            })
            .catch((error) => {
                //console.error('Error:', error);
            });
        });

        document.getElementById('logout--button').addEventListener('click', function (event) {
            event.preventDefault();
            fetch('http://localhost:3000/users/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(res => {
                //console.log(res);
                if (res.success) {
                        document.cookie = 'task-manager-token' + '=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                    // reload page
                    window.location.href = 'http://localhost:3000/login';
                } else {
                    alert('Something went wrong! Please contact support')
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        });
    
        var doneElements = document.getElementsByClassName('done--button');
        var updateElements = document.getElementsByClassName('update--button');
        var deleteElements = document.getElementsByClassName('delete--button');

        for (var i = 0; i < doneElements.length; i++) {
            doneElements[i].addEventListener('click', function (event) {
                event.preventDefault();
                var taskId = this.getAttribute('data-id');
                console.log(taskId);
                fetch('http://localhost:3000/tasks/mark-as-done/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({taskId})
                })
                .then(response => response.json())
                .then(res => {
                    console.log(res)
                    if (res.task._id) {
                        // reload page
                        window.location.href = 'http://localhost:3000/';
                    }
                })
                .catch((error) => {
                    alert('Error:', error);
                });
            });
        }

        for (var i = 0; i < deleteElements.length; i++) {
            deleteElements[i].addEventListener('click', function (event) {
                event.preventDefault();
                var taskId = this.getAttribute('data-id');
                console.log(taskId);
                fetch('http://localhost:3000/task/', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({taskId})
                })
                .then(response => response.json())
                .then(res => {
                    console.log(res)
                    if (res.task._id) {
                        // reload page
                        window.location.href = 'http://localhost:3000/';
                    }
                })
                .catch((error) => {
                    alert('Error:', error);
                });
            });
        }

        for (var i = 0; i < updateElements.length; i++) {
            updateElements[i].addEventListener('click', function (event) {
                event.preventDefault();
                var taskId = this.getAttribute('data-id');
                console.log(taskId);
                fetch('http://localhost:3000/task/', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({taskId})
                })
                .then(response => response.json())
                .then(res => {
                    console.log(res)
                    if (res.task._id) {
                        // reload page
                        window.location.href = 'http://localhost:3000/';
                    }
                })
                .catch((error) => {
                    alert('Error:', error);
                });
            });
        }


    </script>
</body>
</html>